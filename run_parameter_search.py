import os
import subprocess
import json
import itertools
import gc
import argparse
def print_hyperparameters(config):
    print("==============================================")
    print("Fixed hyperparameters:")
    for key, value in config.items():
        print(f"{key}: {value}")
    print("==============================================")


def main(args):
    # Load hyperparameters from the config file
    script_dir = os.path.dirname(os.path.abspath(__file__))
    config_path = os.path.join(script_dir, 'configs', args.config)
    with open(config_path, 'r') as f:
        config = json.load(f)

    print_hyperparameters(config)

    # extract all combinations of hyperparameters
    combos = list(itertools.product(*config.values()))
    # Create a list of dictionaries for each combination
    combinations = [dict(zip(config.keys(), combo)) for combo in combos]
    
    # # Extract combinable and fixed hyperparameters
    # combinable = config["combinable"]
    # fixed = config["fixed"]

    # combinable_keys, combinable_values = zip(*combinable.items())
    # combinations = [dict(zip(combinable_keys, v)) for v in itertools.product(*combinable_values)]

    # fixed_keys, fixed_values = zip(*fixed.items())
    # fixed_combinations = [dict(zip(fixed_keys, v)) for v in itertools.product(*fixed_values)]

    directories = [
        r"C:\Users\piete\OneDrive - JKU\OneDrive - Johannes Kepler Universit√§t Linz\MSc in AI - JKU\Courses\Thesis\Repositories\MT_Normalizer_free_Neural_Nets"
    ]

    # total_combinations = len(combinations) * len(fixed_combinations) * len(directories)
    counter = 1
    for directory in directories:
        print("Training in directory:", directory)
        os.chdir(directory)
        combinations = [
            # {'model': 'Linear', 'seed': 32, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 1, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'testing spps for repeats', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': True, 'activation': 'ReLU', 'signal_preserving': False},
            # {'model': 'Linear', 'seed': 32, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 1, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'testing spps for repeats', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': True, 'activation': 'ReLU', 'signal_preserving': False},
            # {'model': 'EfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'test 5 fold for nf', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': True, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'EfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'test 5 fold for nf', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'SNEfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'test 5 fold for nf', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'SNEfficientNet1', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'test 5 fold for nf', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'UNEfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'test 5 fold for nf', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': True},
            # {'model': 'DyTEfficientNet', 'seed': 868, 'learning_rate': 0.01, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'spp run', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 868, 'learning_rate': 0.01, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'spp run', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'DyTSNEfficientNet', 'seed': 868, 'learning_rate': 0.01, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'spp run', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 868, 'learning_rate': 0.01, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'spp run', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet1', 'seed': 868, 'learning_rate': 0.01, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'spp run', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyTEfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'spp run', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'spp run', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'DyTSNEfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'spp run', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'spp run', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet1', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'spp run', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyTEfficientNet', 'seed': 868, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'spp run', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 868, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'spp run', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'DyTSNEfficientNet', 'seed': 868, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'spp run', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 868, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'spp run', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet1', 'seed': 868, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'spp run', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyMPSNEfficientNet1', 'seed': 868, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'spp run', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyMPSNEfficientNet1', 'seed': 868, 'learning_rate': 0.01, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'spp run', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyMPSNEfficientNet1', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'spp run', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyTEfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'dyt alpha tuning', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False, 'alpha': 0.2},
            # {'model': 'DyTEfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'dyt alpha tuning', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False, 'alpha': 0.4},
            # {'model': 'DyTEfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'dyt alpha tuning', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False, 'alpha': 0.6},
            # {'model': 'DyTEfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'dyt alpha tuning', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False, 'alpha': 0.8},
            # {'model': 'DyTEfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'dyt alpha tuning', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False, 'alpha': 1.0},
            # {'model': 'DyTEfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'dyt alpha tuning', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False, 'alpha': 1.2},
            # {'model': 'DyTSNEfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'dyt alpha tuning', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False, 'alpha': 0.2},
            # {'model': 'DyTSNEfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'dyt alpha tuning', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False, 'alpha': 0.4},
            # {'model': 'DyTSNEfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'dyt alpha tuning', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False, 'alpha': 0.6},
            # {'model': 'DyTSNEfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'dyt alpha tuning', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False, 'alpha': 0.8},
            # {'model': 'DyTSNEfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'dyt alpha tuning', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False, 'alpha': 1.0},
            # {'model': 'DyTSNEfficientNet', 'seed': 868, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'dyt alpha tuning', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False, 'alpha': 1.2}
            # {'model': 'DyMPSNEfficientNet1', 'seed': 67, 'learning_rate': 0.1, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyMPSNEfficientNet1', 'seed': 67, 'learning_rate': 0.01, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyMPSNEfficientNet1', 'seed': 67, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyTEfficientNet', 'seed': 67, 'learning_rate': 0.1, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'DyTEfficientNet', 'seed': 67, 'learning_rate': 0.01, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'DyTEfficientNet', 'seed': 67, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'DyTSNEfficientNet', 'seed': 67, 'learning_rate': 0.1, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyTSNEfficientNet', 'seed': 67, 'learning_rate': 0.01, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyTSNEfficientNet', 'seed': 67, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 868, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 868, 'learning_rate': 0.00001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 868, 'learning_rate': 0.000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 868, 'learning_rate': 0.0000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 868, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 868, 'learning_rate': 0.00001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 868, 'learning_rate': 0.000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 868, 'learning_rate': 0.0000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': True, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet1', 'seed': 868, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'lower lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet1', 'seed': 868, 'learning_rate': 0.00001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'lower lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 67, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 67, 'learning_rate': 0.00001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 67, 'learning_rate': 0.000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 67, 'learning_rate': 0.0000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 67, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 67, 'learning_rate': 0.00001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 67, 'learning_rate': 0.000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 67, 'learning_rate': 0.0000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet1', 'seed': 67, 'learning_rate': 0.1, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet1', 'seed': 67, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'lower lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet1', 'seed': 67, 'learning_rate': 0.00001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'lower lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyMPSNEfficientNet1', 'seed': 472, 'learning_rate': 0.1, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyMPSNEfficientNet1', 'seed': 472, 'learning_rate': 0.01, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyMPSNEfficientNet1', 'seed': 472, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyTEfficientNet', 'seed': 472, 'learning_rate': 0.1, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'DyTEfficientNet', 'seed': 472, 'learning_rate': 0.01, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'DyTEfficientNet', 'seed': 472, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'DyTSNEfficientNet', 'seed': 472, 'learning_rate': 0.1, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyTSNEfficientNet', 'seed': 472, 'learning_rate': 0.01, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyTSNEfficientNet', 'seed': 472, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 472, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 472, 'learning_rate': 0.00001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 472, 'learning_rate': 0.000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 472, 'learning_rate': 0.0000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 472, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 472, 'learning_rate': 0.00001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 472, 'learning_rate': 0.000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 472, 'learning_rate': 0.0000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet1', 'seed': 362, 'learning_rate': 0.1, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet1', 'seed': 362, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'lower lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet1', 'seed': 362, 'learning_rate': 0.00001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'lower lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyMPSNEfficientNet1', 'seed': 362, 'learning_rate': 0.1, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyMPSNEfficientNet1', 'seed': 362, 'learning_rate': 0.01, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyMPSNEfficientNet1', 'seed': 362, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyTEfficientNet', 'seed': 362, 'learning_rate': 0.1, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'DyTEfficientNet', 'seed': 362, 'learning_rate': 0.01, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'DyTEfficientNet', 'seed': 362, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'DyTSNEfficientNet', 'seed': 362, 'learning_rate': 0.1, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyTSNEfficientNet', 'seed': 362, 'learning_rate': 0.01, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyTSNEfficientNet', 'seed': 362, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 362, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 362, 'learning_rate': 0.00001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 362, 'learning_rate': 0.000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 362, 'learning_rate': 0.0000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 362, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 362, 'learning_rate': 0.00001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 362, 'learning_rate': 0.000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 362, 'learning_rate': 0.0000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet1', 'seed': 362, 'learning_rate': 0.1, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet1', 'seed': 362, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'lower lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet1', 'seed': 362, 'learning_rate': 0.00001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'lower lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyMPSNEfficientNet1', 'seed': 970, 'learning_rate': 0.1, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyMPSNEfficientNet1', 'seed': 970, 'learning_rate': 0.01, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyMPSNEfficientNet1', 'seed': 970, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyTEfficientNet', 'seed': 970, 'learning_rate': 0.1, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'DyTEfficientNet', 'seed': 970, 'learning_rate': 0.01, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'DyTEfficientNet', 'seed': 970, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'DyTSNEfficientNet', 'seed': 970, 'learning_rate': 0.1, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyTSNEfficientNet', 'seed': 970, 'learning_rate': 0.01, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'DyTSNEfficientNet', 'seed': 970, 'learning_rate': 0.001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 970, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 970, 'learning_rate': 0.00001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 970, 'learning_rate': 0.000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSEfficientNet', 'seed': 970, 'learning_rate': 0.0000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'Swish', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 970, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 970, 'learning_rate': 0.00001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 970, 'learning_rate': 0.000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet', 'seed': 970, 'learning_rate': 0.0000001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            # {'model': 'WSSNEfficientNet1', 'seed': 970, 'learning_rate': 0.1, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'repeats additional tests', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            {'model': 'WSSNEfficientNet1', 'seed': 970, 'learning_rate': 0.0001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'lower lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False},
            {'model': 'WSSNEfficientNet1', 'seed': 970, 'learning_rate': 0.00001, 'batch_size': 512, 'num_epochs': 20, 'use_scheduler': False, 'scheduler_step_size': 40, 'scheduler_gamma': 0.1, 'description': 'lower lr', 'save_every': 10, 'log': True, 'log_signal': False, 'debug': False, 'normalization': False, 'activation': 'SELU', 'signal_preserving': False}
        ]
        for i in range(len(combinations)):
                combined = combinations[i]
                print("==============================================")
                print("Using hyperparameters:", combined)
                print(f"Training combination {i+1} of {len(combinations)}")
                print("==============================================")
        # Iterate over all combinations of hyperparameters
        # for combo in combinations:
        #     for fixed_combo in fixed_combinations:
        #         combined = {**fixed_combo, **combo}
                
        #         print("==============================================")
        #         print("Using hyperparameters:", combined)
        #         print(f"Training combination {counter} of {total_combinations}")
        #         print("==============================================")
                
                # make the config file for a single run
                combo_config_name = f"combo_config_{counter}.json"
                combo_config_path = os.path.join(script_dir, 'configs', combo_config_name)
                with open(combo_config_path, 'w') as f:
                    json.dump(combined, f)
                
                # Construct the command with the path to the temporary JSON file
                command = f"python run_training.py --config {combo_config_name}"
                
                subprocess.run(command, shell=True)
                gc.collect()
                os.remove(combo_config_path)
                counter += 1
    
    print_hyperparameters(config)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Hyperparameter search script parameters")
    parser.add_argument('--config', type=str, default="config_parameter_search.json", help='Configuration file name')
    args = parser.parse_args()

    main(args)